<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2010 rel. 3 (x64) (http://www.altova.com) by Andy (Home Office) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://ebsa.ipt.com/VCloudCommand-2.0" xmlns:altova="http://www.altova.com/xml-schema-extensions" targetNamespace="http://ebsa.ipt.com/VCloudCommand-2.0" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">
	<xs:element name="execute">
		<xs:annotation>
			<xs:documentation>The command type is a high level element</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="vc:Execute"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="Execute">
		<xs:choice>
			<xs:element name="Environment" type="vc:EnvironmentType"/>
			<xs:element name="Configuration">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="OrganisationNetwork" type="vc:detail" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element name="EdgeGateway" type="vc:detail" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="detail">
		<xs:attribute name="command" type="vc:Command">
			<xs:annotation>
				<xs:documentation>A command which can be applied to the entity</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="includes">
			<xs:annotation>
				<xs:documentation>Regular expression to match the name(s) of the entities being referred to</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="excludes">
			<xs:annotation>
				<xs:documentation>Regular expression to exclude the name(s) of the entities not being referred to</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="strategy" type="vc:Strategy">
			<xs:annotation>
				<xs:documentation>Some commands require further details, in these cases a strategy can be provided to give the engine some processing choices.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="errorStrategy" type="vc:ErrorStrategy">
			<xs:annotation>
				<xs:documentation>One of a distinct set of supported strategies to execute on error</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="Strategy">
		<xs:restriction base="xs:string">
			<xs:enumeration value="createOnly">
				<xs:annotation>
					<xs:documentation>This strategy will expect that it will be creating all entities.  It will fail if an entity already exists.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="merge">
				<xs:annotation>
					<xs:documentation>This strategy will expect that some entities might already exist.  It will only create those entities that do not already exist.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="overwrite">
				<xs:annotation>
					<xs:documentation>This strategy will overwrite previously existing entities.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="exists">
				<xs:annotation>
					<xs:documentation>This strategy will succeed if an element is confirmed to exist.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="doesnotexist">
				<xs:annotation>
					<xs:documentation>This strategy will succeed if an element is confirmed not to exist.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ErrorStrategy">
		<xs:restriction base="xs:string">
			<xs:enumeration value="exit">
				<xs:annotation>
					<xs:documentation>This strategy will stop processing immediately and leave the system in whatever state it is in at the moment of error.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="cleanAndExit">
				<xs:annotation>
					<xs:documentation>This strategy will attempt to leave the system in a state which is clean, ideally it will return the system to the state it was in prior to execution of the job.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="continue">
				<xs:annotation>
					<xs:documentation>This strategy will report the error and continue as if nothing had happened</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="optimistic">
				<xs:annotation>
					<xs:documentation>This strategy will process the error and continue if determined that nothing fatal occurred, otherwise will exit. Only for use in Control commands.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Command">
		<xs:restriction base="xs:string">
			<xs:enumeration value="create"/>
			<xs:enumeration value="confirm"/>
			<xs:enumeration value="delete"/>
			<xs:enumeration value="start"/>
			<xs:enumeration value="stop"/>
			<xs:enumeration value="suspend"/>
			<xs:enumeration value="resume"/>
			<xs:enumeration value="reboot"/>
			<xs:enumeration value="shutdown"/>
			<xs:enumeration value="deploy"/>
			<xs:enumeration value="undeploy"/>
			<xs:enumeration value="updateStartSection"/>
			<!-- https://blogs.vmware.com/vsphere/2012/04/partially-powered-off-vapp-vms.html -->
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="VirtualApplication">
		<xs:complexContent>
			<xs:extension base="vc:detail">
				<xs:sequence>
					<xs:element name="OrganisationNetwork" type="vc:detail" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="ApplicationNetwork" type="vc:detail" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="VirtualMachine" type="vc:detail" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="optionNameType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="overwriteEmptyTemplateMachines"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="EnvironmentType">
		<xs:sequence>
			<xs:element name="options" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="option" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="name" type="vc:optionNameType" use="required"/>
								<xs:attribute name="value" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VirtualApplication" type="vc:VirtualApplication" maxOccurs="unbounded"/>
			<xs:element name="Overrides" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="override" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="xpath" type="xs:string" use="required"/>
								<xs:attribute name="value" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>			
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>